@{
    Model.PreviousText = T("Previous");
    Model.NextText = T("Next");

    var routeData = new RouteValueDictionary(ViewContext.RouteData.Values);
    var queryString = ViewContext.HttpContext.Request.QueryString;
    if (queryString != null) {
        foreach (string key in queryString.Keys) {
            if (key != null && !routeData.ContainsKey(key)) {
                routeData[key] = queryString[key];
            }
        }
    }

    if (routeData.ContainsKey("id") && !HasText(routeData["id"])) {
        routeData.Remove("id");
    }

    var totalPageCount = Model.PageSize > 0 ? (int)Math.Ceiling((double)Model.TotalItemCount / Model.PageSize) : 1;

    // Render the pager buttons.
    Model.Metadata.Type = "Pager_Links";
    IHtmlString pagerLinks = Display(Model);

    // Render the page size buttons.
    Model.Classes.Add("selector form-control");
    var pageSizeTag = Tag(Model, "select");

    if (Model.RouteData != null) {
        foreach (var rd in Model.RouteData.Values) {
            routeData[rd.Key] = rd.Value;
        }
    }

    var pageSizes = new List<int?> { 10, 50, 100 };
    var maxPageSize = WorkContext.CurrentSite.MaxPageSize;
    var defaultPageSize = WorkContext.CurrentSite.PageSize;
    if (maxPageSize > 0 && defaultPageSize > maxPageSize) {
        defaultPageSize = maxPageSize;
        pageSizes.RemoveAll(x => x > maxPageSize);
    }

    if (defaultPageSize > 0 && !pageSizes.Contains(defaultPageSize)) {
        pageSizes.Add(defaultPageSize);
    }
}

@if (Model.TotalItemCount > 1) {
    <div class="pager-footer row">
        @if (totalPageCount > 1 || Model.PageSize == 0 || Model.PageSize > pageSizes.First()) {
            <div class="col-md-4 ">
                @if ((int)Model.PageSize >= 1) {
                    <span class="page-results">@T("Showing items {0} - {1} of {2}", (Model.Page - 1) * (int)Model.PageSize + 1, Model.PageSize == 0 ? Model.TotalItemCount : Math.Min(Model.TotalItemCount, (Model.Page) * (int)Model.PageSize), Model.TotalItemCount)</span>

                } else {
                    <span class="page-results">@T("Showing all {0} items", Model.TotalItemCount)</span>
                }
            </div>
            <div class="col-md-4 form-inline text-center">
                @T("Show:")
                @pageSizeTag.StartElement
                @{
                    var pageId = String.IsNullOrEmpty(Model.PagerId) ? "page" : Model.PagerId;
                    var nPage = Math.Max(1, Convert.ToInt32(routeData[pageId]));
                    var firstItem = (nPage - 1) * Model.PageSize + 1;
                    var selected = (int)Model.PageSize == 0;
                    routeData["pageSize"] = 0;
                    routeData[pageId] = 1;
                }
                <option value="@Url.Action((string)routeData["action"], (string)routeData["controller"], routeData)" @if (selected) { <text> selected</text>}>@T("All")</option>
                @foreach (int size in pageSizes.OrderBy(p => p)) {
                        selected = (int)Model.PageSize == size;
                        routeData["pageSize"] = size;
                        routeData[pageId] = size > 0 ? Math.Ceiling((double)firstItem / size) : 1;
                    <option value="@Url.Action((string) routeData["action"], (string) routeData["controller"], routeData)" @if (selected) { <text> selected</text>}>@size</option>
                }
                @pageSizeTag.EndElement
            </div>
            <div class="col-md-4">
                @if ((int)Model.PageSize >= 1) {
                    <div class="pull-right">
                        @pagerLinks
                    </div>
                }
            </div>
                    }
    </div>
                    }