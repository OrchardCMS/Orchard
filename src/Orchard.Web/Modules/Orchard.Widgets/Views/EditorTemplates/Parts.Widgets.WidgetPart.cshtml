@model Orchard.Widgets.Models.WidgetPart
@{
    var themeZonesGroup = Model.AvailableLayoutZones.Any() ? new SelectListGroup { Name = T("Theme Zones").Text } : default(SelectListGroup);
    var layoutZonesGroup = Model.AvailableLayoutZones.Any() ? new SelectListGroup { Name = T("Layout Zones").Text } : default(SelectListGroup); ;
    var themeZoneOptions = Model.AvailableThemeZones.Select(x => new SelectListItem { Text = x, Value = x, Selected = x == Model.Zone, Group = themeZonesGroup}).ToList();
    var layoutZoneOptions = Model.AvailableLayoutZones.Select(x => new SelectListItem { Text = x, Value = x, Selected = x == Model.Zone, Group = layoutZonesGroup}).ToList();
    var zoneOptions = themeZoneOptions.Concat(layoutZoneOptions);
}
<h2>@Model.TypeDefinition.DisplayName</h2>
<fieldset>
    @Html.LabelFor(widget => widget.Zone, T("Zone"))
    @Html.DropDownListFor(widget => widget.Zone, zoneOptions)
    <span class="hint">@T("The Zone in the Layout where the Widget will be rendered.")</span>
</fieldset>
<fieldset>
    @Html.LabelFor(widget => widget.LayerId, T("Layer"))
    @Html.DropDownListFor(widget => widget.LayerId, new SelectList(Model.AvailableLayers, "Id", "Name"))
    <span class="hint">@T("The Layer where the Widget will be rendered.")</span>
</fieldset>
<fieldset>
    @Html.LabelFor(widget => widget.Position, T("Position"))
    @Html.TextBoxFor(widget => widget.Position, new { @class = "text small" })
    <span class="hint">@T("The position of the Widget inside the Zone.")</span>
</fieldset>
<fieldset>
    @Html.LabelFor(widget => widget.Title, T("Title"))
    @Html.TextBoxFor(widget => widget.Title, new { @class = "text medium" })
    <span class="hint">@T("The title of the Widget.")</span>
    @Html.EditorFor(widget => widget.RenderTitle)
    <label class="forcheckbox" for="@Html.FieldIdFor(m => m.RenderTitle)">@T("Check to render the title on the front-end, uncheck to hide")</label>
</fieldset>
<fieldset>
    @Html.LabelFor(widget => widget.Name, T("Name"))
    @Html.TextBoxFor(widget => widget.Name, new { @class = "text" })
    <span class="hint">@T("The technical name of the Widget, used for css class and alternates.")</span>
</fieldset>
