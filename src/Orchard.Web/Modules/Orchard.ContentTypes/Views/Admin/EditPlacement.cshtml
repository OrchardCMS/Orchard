@using Orchard.ContentTypes.Services
@model Orchard.ContentTypes.ViewModels.EditPlacementViewModel
@{
    Style.Require("ContentTypesAdmin");
    Script.Require("PlacementEditor").AtFoot();
    Layout.Title = T("Edit Placement - {0}", Model.ContentTypeDefinition.DisplayName).ToString();

    int i = 0;
}

@helper RenderPlacement(DriverResultPlacement p, int i) {
var placement = p.PlacementSettings;
    <li class="place" data-shape-type="@placement.ShapeType" data-shape-differentiator="@placement.Differentiator" data-shape-zone="Content" data-shape-position="@placement.Position">
        <span class="toggle">Show Editor Shape</span>
        <div class="shape-type"><h3>@placement.ShapeType @placement.Differentiator</h3></div>
        <div class="shape-editor">
            @try {
                @Display(p.Shape)
            }
            catch {
            }
        </div>
        @Html.HiddenFor(m => m.AllPlacements[i].PlacementSettings.ShapeType, new { @class = "type" })
        @Html.HiddenFor(m => m.AllPlacements[i].PlacementSettings.Differentiator, new { @class = "differentiator" })
        @Html.HiddenFor(m => m.AllPlacements[i].PlacementSettings.Zone, new { @class = "zone" })
        @Html.HiddenFor(m => m.AllPlacements[i].PlacementSettings.Position, new { @class = "position" })
    </li>
}

<div id="save-message" class="message message-Warning">@T("You need to hit \"Save\" in order to save your changes.")</div>

@using (Html.BeginFormAntiForgeryPost()) {
    @Html.ValidationSummary()
    <div id="placement">
        <div data-tab="" class="zone-container" id="content-tab">
            <h2>Content</h2>
            <ul class="tabdrag">
                @foreach (var p in Model.Content) {
                    @RenderPlacement(p, i);
                    i++;
                }
            </ul>
        </div>

        <div id="sortableTabs">
            @foreach (var tab in Model.Tabs) {
                <div data-tab="@tab.Key" class="zone-container tab-container">
                    <a class="delete">Delete</a>
                    <h2>@tab.Key</h2>
                    <ul class="tabdrag">
                        @foreach (var p in tab.Value) {
                            @RenderPlacement(p, i);
                            i++;
                        }
                    </ul>
                </div>
            }
        </div>
    </div>

    <div>
        <input type="text" id="tabName" />
        <button class="primaryAction" id="newTab">@T("New Tab")</button>
    </div>

    <fieldset class="action">
        <button class="primaryAction" type="submit" name="submit.Save" value="Save">@T("Save")</button>
        <button class="primaryAction" type="submit" name="submit.Restore" value="Restore" itemprop="RemoveUrl" data-message="@T("Are you sure you want to restore these placements?")">@T("Restore")</button>
    </fieldset>

}