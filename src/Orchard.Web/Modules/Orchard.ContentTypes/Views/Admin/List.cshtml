@model Orchard.ContentTypes.ViewModels.ListContentTypesViewModel
@using Orchard.Core.Contents.Settings;
@{
    Script.Require("ContentTypesAdmin");
    Layout.Title = T("Manage Content Types").ToString();
}
<div class="panel panel-default">
    <div class="panel-heading no-border form-inline">
        <div class="panel-heading-actions">
            @Html.ActionLink(T("Create new type").ToString(), "Create", new { Controller = "Admin", Area = "Orchard.ContentTypes" }, new { @class = "btn btn-primary create-new" })
        </div>
        <div class="panel-heading-primary-group">
            <fieldset class="bulk-actions">
                <label>Filter: </label>
                <input id="search-box" class="form-control auto-size" type="search" aria-controls="contenttypes" autofocus="autofocus" placeholder="@T("Display Name")">
            </fieldset>
        </div>
    </div>
    <div class="">
        <table id="contenttypes" class="table table-fw-widget data-table table-striped">
            <thead>
                <tr>
                    <th>@T("Display Name")</th>
                    <th>@T("Stereotype")</th>
                    <th class="actions"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var type in Model.Types) {
                var typeName = type.Name;
                var displayName = type.DisplayName;
                var settings = type.Settings.GetModel<ContentTypeSettings>();
                var creatable = settings.Creatable;
                var stereotype = type.Settings.ContainsKey("Stereotype") ? type.Settings["Stereotype"] : default(string);
                    <tr>
                        <td>@displayName</td>
                        <td>@stereotype</td>
                        <td class="actions">
                            @if (creatable) {
                                @Html.ActionLink(T("Create New {0}", Html.Raw(displayName)).Text, "Create", new { area = "Contents", id = typeName })@T(" | ")
                                @Html.ActionLink(T("List Items").ToString(), "List", new { area = "Contents", id = typeName })@T(" | ")
                            }
                            @Html.ActionLink(T("Edit").ToString(), "Edit", new { area = "Orchard.ContentTypes", id = typeName }, new { @class = "edit-link" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>