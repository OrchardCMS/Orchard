@using Orchard.ContentManagement
@using Orchard.Core.Containers.Models
@using Orchard.Core.Containers.ViewModels
@using Orchard.Lists.ViewModels
@using SortDirection = Orchard.Core.Containers.ViewModels.SortDirection;
@{
    var container = (ContainerPart) Model.Container;
    var options = (ContentOptions)Model.Options;
}
<fieldset>
    <div class="or-checkbox or-select-all inline">
        <input id="checkAll" class="check-all" type="checkbox">
        <label class="check-all" for="checkAll" title="@T("Select All")"></label>
    </div>
    <input id="publishActions" name="Options.BulkAction" type="hidden" value="@ContentsBulkAction.None" />
    <button name="submit.BulkEdit" type="submit" class="hidden" value="@T("Apply")">@T("Apply")</button>
    <div class="btn-group">
        <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
            <i class="fa fa-bolt"></i> Bulk Actions <span class="caret"></span>
        </button>&nbsp;
        <ul class="dropdown-menu" role="menu">
            <li><a href="#" data-confirm="@T("Are you sure you want to publish these items?")" data-action="@ContentsBulkAction.PublishNow">@T("Publish Now").ToString()</a></li>
            <li><a href="#" data-confirm="@T("Are you sure you want to unpublish these items?")" data-action="@ContentsBulkAction.Unpublish">@T("Unpublish").ToString()</a></li>
            <li><a href="#" data-confirm="@T("Are you sure you want to delete these items?")" data-action="@ContentsBulkAction.Remove">@T("Delete").ToString()</a></li>
            <li><a href="#" data-confirm="@T("Are you sure you want to remove these items from the list?")" data-action="@ContentsBulkAction.RemoveFromList">@T("Remove from List").ToString()</a></li>
        </ul>
    </div>
</fieldset>
@if (container.EnablePositioning) {
    <fieldset class="bulk-actions">
        <label for="listOperations" class="list-operation">@T("List Operations:")</label>
        <select id="listOperations" name="Operation">
            @Html.SelectOption(ListOperation.None, false, T("Choose operation...").ToString())
            @Html.SelectOption(ListOperation.Shuffle, false, T("Shuffle").ToString())
            @Html.SelectOption(ListOperation.Reverse, false, T("Reverse").ToString())
            @Html.SelectOption(ListOperation.Sort, false, T("Sort").ToString())
        </select>
        <select id="SortBy" name="SortBy">
            @Html.SelectOption("", false, T("Sort by...").ToString())
            @Html.SelectOption(SortBy.Created, false, T("Recently Created").ToString())
            @Html.SelectOption(SortBy.Modified, false, T("Recently Modified").ToString())
            @Html.SelectOption(SortBy.Published, false, T("Recently Published").ToString())
            @Html.SelectOption(SortBy.DisplayText, false, T("Title").ToString())
        </select>
        <select id="SortByDirection" name="SortByDirection">
            @Html.SelectOption(SortDirection.Ascending, false, T("Ascending").ToString())
            @Html.SelectOption(SortDirection.Descending, false, T("Descending").ToString())
        </select>
        <button type="submit" name="submit.ListOp" value="yes please">@T("Apply")</button>
    </fieldset>
}
else {
  <fieldset class="bulk-actions">
        <label for="orderResults" class="bulk-order">@T("Ordered by")</label>
        <select id="orderResults" name="Options.OrderBy">
            @Html.SelectOption((SortBy)Model.Options.OrderBy, SortBy.Created, T("Recently Created").ToString())
            @Html.SelectOption((SortBy)Model.Options.OrderBy, SortBy.Modified, T("Recently Modified").ToString())
            @Html.SelectOption((SortBy)Model.Options.OrderBy, SortBy.Published, T("Recently Published").ToString())
            @Html.SelectOption((SortBy)Model.Options.OrderBy, SortBy.DisplayText, T("Title").ToString())
        </select>
        <button type="submit" name="submit.Order" value="yes please">@T("Apply")</button>
    </fieldset>
}