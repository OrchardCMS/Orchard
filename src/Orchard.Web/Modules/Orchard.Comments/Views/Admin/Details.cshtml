@model CommentsDetailsViewModel
@using Orchard.Comments.Models
@using Orchard.Comments.ViewModels;

@{ Layout.Title = T("Comments for {0}", Model.DisplayNameForCommentedItem).ToString(); }

<div class="panel panel-default ">

    <div class="panel-heading no-border form-inline">
        <div class="panel-heading-actions">
            @if (Model.CommentsClosedOnItem) {
                using (Html.BeginFormAntiForgeryPost(Url.Action("Enable", new { commentedItemId = Model.CommentedItemId }), FormMethod.Post, new { @class = "inline" })) {
                    <fieldset>
                        <button type="submit" title="@T("Enable Comments")">@T("Enable Comments")</button>
                    </fieldset>
                }
            }
            else {
                using (Html.BeginFormAntiForgeryPost(Url.Action("Disable", new { commentedItemId = Model.CommentedItemId }), FormMethod.Post, new { @class = "inline" })) {
                    <fieldset>
                        <button type="submit" class="primaryAction" title="@T("Disable Comments")">@T("Disable Comments")</button>
                    </fieldset>
                }
            }
        </div>
        <div class="panel-heading-primary-group">

            @using (Html.BeginFormAntiForgeryPost()) {
                @Html.ValidationSummary()
                <fieldset class="bulk-actions">
                    <label for="publishActions">@T("Actions:")</label>
                    <select id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)" class="form-control auto-size">
                        @Html.SelectOption(Model.Options.BulkAction, CommentDetailsBulkAction.None, T("Choose action...").ToString())
                        @Html.SelectOption(Model.Options.BulkAction, CommentDetailsBulkAction.Approve, T("Approve").ToString())
                        @Html.SelectOption(Model.Options.BulkAction, CommentDetailsBulkAction.Unapprove, T("Unapprove").ToString())
                        @Html.SelectOption(Model.Options.BulkAction, CommentDetailsBulkAction.Delete, T("Delete").ToString())
                    </select>
                    <button type="submit" name="submit.BulkEdit" value="@T("Apply")">@T("Apply")</button>
                </fieldset>
                <fieldset class="bulk-actions">
                    <label for="filterResults">@T("Filter:")</label>
                    <select id="filterResults" name="@Html.NameOf(m => m.Options.Filter)" class="form-control auto-size">
                        @Html.SelectOption(Model.Options.Filter, CommentDetailsFilter.All, T("All Comments").ToString())
                        @Html.SelectOption(Model.Options.Filter, CommentDetailsFilter.Approved, T("Approved Comments").ToString())
                        @Html.SelectOption(Model.Options.Filter, CommentDetailsFilter.Pending, T("Pending Comments").ToString())
                    </select>
                    <button type="submit" name="submit.Filter" value="@T("Apply")">@T("Apply")</button>
                </fieldset>
            }
        </div>
    </div>
    <div class="panel-body">
        @using (Html.BeginFormAntiForgeryPost()) {
            @Html.ValidationSummary()
            <div class="row">
                <div class="col-sm-12">
                    <div class="table-responsive table-with-footer">
                        <table class="table table-fw-widget data-table table-striped dataTable no-footer" summary="@T("This is a table of the comments for the content item")">
                            <colgroup>
                                <col id="Col1" />
                                <col id="Col2" />
                                <col id="Col3" />
                                <col id="Col4" />
                                <col id="Col5" />
                                <col id="Col6" />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th scope="col"><input type="checkbox" class="check-all" /></th>
                                    <th scope="col">@T("Status")</th>
                                    <th scope="col">@T("Author")</th>
                                    <th scope="col">@T("Comment")</th>
                                    <th scope="col">@T("Date")</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            @{var commentIndex = 0;}
                            @foreach (var commentEntry in Model.Comments) {
                                <tr>
                                    <td>
                                        <input type="hidden" value="@Model.Comments[commentIndex].Comment.Id" name="@Html.NameOf(m => m.Comments[commentIndex].Comment.Id)" />
                                        <input type="checkbox" value="true" name="@Html.NameOf(m => m.Comments[commentIndex].IsChecked)" />
                                        <input type="hidden" value="@Model.DisplayNameForCommentedItem" name="DisplayNameForCommentedtem" />
                                        <input type="hidden" value="@Model.CommentedItemId" name="CommentedItemId" />
                                    </td>
                                    <td>
                                        @if (commentEntry.Comment.Status == CommentStatus.Pending) { @T("Pending");
                                        }
                                        else { @T("Approved");
                                        }
                                    </td>
                                    <td>@commentEntry.Comment.Author</td>
                                    <td>
                                        @if (commentEntry.Comment.CommentText != null) {
                                            var text = commentEntry.Comment.CommentText.Length > 23 ? commentEntry.Comment.CommentText.Substring(0, 24) : (commentEntry.Comment.CommentText + T(" ..."));
                                            @text
                                        }
                                    </td>
                                    <td>@Display.DateTime(DateTimeUtc: commentEntry.Comment.CommentDateUtc.GetValueOrDefault())</td>
                                    <td>
                                        <div class="actions">
                                            <a href="@Url.Action("Edit", new {commentEntry.Comment.Id})" title="@T("Edit Comment")">@T("Edit")</a> @T("|")
                                            <a href="@Url.Action("Delete", new {commentEntry.Comment.Id})" title="@T("Delete Comment")">@T("Delete")</a>
                                        </div>
                                    </td>
                                </tr>
                                commentIndex = commentIndex + 1;
                            }
                        </table>
                    </div>
                </div>
            </div>
                                }
    </div>
</div>
