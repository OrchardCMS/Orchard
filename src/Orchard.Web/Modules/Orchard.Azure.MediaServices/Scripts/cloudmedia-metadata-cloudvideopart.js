/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

/// <reference path="Typings/jquery.d.ts" />
(function ($) {
    var hasFocus = function (videoId) {
        var focusedVideoId = $("#media-library-main-list li.has-focus .media-thumbnail-cloud-video").data("id");
        return focusedVideoId == videoId;
    };
    var updateUploadProgressLabel = function () {
        var containers = $("#media-library-main-editor-focus .properties");
        containers.each(function () {
            var container = $(this);
            var statusWrapper = container.find(".upload-status-wrapper");
            var publicationStatusLabel = container.find(".publication-status span");
            var uploadStatusLabel = container.find(".upload-status-text");
            var progressLabel = container.find(".upload-progress-value");
            var uploadProgressContainer = $(".upload-progress-status");
            var statusUrl = statusWrapper.data("status-url");
            var status = statusWrapper.data("upload-status");
            var published = statusWrapper.data("published");
            var videoId = statusWrapper.data("video-id");
            if (status == "Uploaded" && published) {
                return;
            }
            var update = function () {
                if (!hasFocus(videoId)) {
                    return;
                }
                $.ajax({
                    url: statusUrl,
                    cache: false
                }).done(function (data) {
                    progressLabel.text(data.uploadState.percentComplete + "%");
                    uploadStatusLabel.text(data.uploadState.status);
                    publicationStatusLabel.text(data.published ? statusWrapper.data("published-text") : statusWrapper.data("draft-text"));
                    if (data.published) {
                        var mediathumbnail = $(".media-thumbnail-cloud-video[data-id=" + videoId + "]");
                        mediathumbnail.parents("li:first").find(".publication-status").hide();
                    }
                    if (data.uploadState.status == "Uploaded") {
                        uploadProgressContainer.hide();
                        return;
                    }
                    else if (data.uploadState.status == "Uploading") {
                        uploadProgressContainer.show();
                    }
                    window.setTimeout(update, 5000);
                });
            };
            update();
        });
    };
    updateUploadProgressLabel();
})(jQuery);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsb3VkbWVkaWEtbWV0YWRhdGEtY2xvdWR2aWRlb3BhcnQuanMiLCJjbG91ZG1lZGlhLW1ldGFkYXRhLWNsb3VkdmlkZW9wYXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxBQ0xBLDRDQUE0QztBQUU1QyxDQUFDLFVBQUMsQ0FBZ0I7SUFDZCxJQUFJLFFBQVEsR0FBRyxVQUFDLE9BQWU7UUFDM0IsSUFBSSxjQUFjLEdBQVcsQ0FBQyxDQUFDLG9FQUFvRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hILE1BQU0sQ0FBQyxjQUFjLElBQUksT0FBTyxDQUFDO0lBQ3JDLENBQUMsQ0FBQztJQUVGLElBQUkseUJBQXlCLEdBQUc7UUFDNUIsSUFBSSxVQUFVLEdBQVcsQ0FBQyxDQUFDLDhDQUE4QyxDQUFDLENBQUM7UUFFM0UsVUFBVSxDQUFDLElBQUksQ0FBQztZQUNaLElBQUksU0FBUyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN4QixJQUFJLGFBQWEsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUM7WUFDN0QsSUFBSSxzQkFBc0IsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLDBCQUEwQixDQUFDLENBQUM7WUFDeEUsSUFBSSxpQkFBaUIsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFDOUQsSUFBSSxhQUFhLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1lBQzdELElBQUksdUJBQXVCLEdBQUcsQ0FBQyxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDM0QsSUFBSSxTQUFTLEdBQVcsYUFBYSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUN6RCxJQUFJLE1BQU0sR0FBVyxhQUFhLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQ3pELElBQUksU0FBUyxHQUFXLGFBQWEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDeEQsSUFBSSxPQUFPLEdBQVcsYUFBYSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUVyRCxFQUFFLENBQUMsQ0FBQyxNQUFNLElBQUksVUFBVSxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BDLE1BQU0sQ0FBQztZQUNYLENBQUM7WUFFRCxJQUFJLE1BQU0sR0FBRztnQkFDVCxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3JCLE1BQU0sQ0FBQztnQkFDWCxDQUFDO2dCQUNELENBQUMsQ0FBQyxJQUFJLENBQUM7b0JBQ0gsR0FBRyxFQUFFLFNBQVM7b0JBQ2QsS0FBSyxFQUFFLEtBQUs7aUJBQ2YsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLElBQVU7b0JBQ2YsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsR0FBRyxHQUFHLENBQUMsQ0FBQztvQkFDM0QsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7b0JBQ2hELHNCQUFzQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7b0JBRXRILEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO3dCQUNqQixJQUFJLGNBQWMsR0FBRyxDQUFDLENBQUMsdUNBQXVDLEdBQUcsT0FBTyxHQUFHLEdBQUcsQ0FBQyxDQUFDO3dCQUNoRixjQUFjLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO29CQUMxRSxDQUFDO29CQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxJQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUM7d0JBQ3hDLHVCQUF1QixDQUFDLElBQUksRUFBRSxDQUFDO3dCQUMvQixNQUFNLENBQUM7b0JBQ1gsQ0FBQztvQkFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQzt3QkFDaEQsdUJBQXVCLENBQUMsSUFBSSxFQUFFLENBQUM7b0JBQ25DLENBQUM7b0JBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ3BDLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQyxDQUFDO1lBQ0YsTUFBTSxFQUFFLENBQUM7UUFDYixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQztJQUVGLHlCQUF5QixFQUFFLENBQUM7QUFDaEMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMiLCJmaWxlIjoiY2xvdWRtZWRpYS1tZXRhZGF0YS1jbG91ZHZpZGVvcGFydC5qcyIsInNvdXJjZXNDb250ZW50IjpbbnVsbCwiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIlR5cGluZ3MvanF1ZXJ5LmQudHNcIiAvPlxuXG4oKCQgOiBKUXVlcnlTdGF0aWMpID0+IHtcbiAgICB2YXIgaGFzRm9jdXMgPSAodmlkZW9JZDogbnVtYmVyKSA9PiB7XG4gICAgICAgIHZhciBmb2N1c2VkVmlkZW9JZDogbnVtYmVyID0gJChcIiNtZWRpYS1saWJyYXJ5LW1haW4tbGlzdCBsaS5oYXMtZm9jdXMgLm1lZGlhLXRodW1ibmFpbC1jbG91ZC12aWRlb1wiKS5kYXRhKFwiaWRcIik7XG4gICAgICAgIHJldHVybiBmb2N1c2VkVmlkZW9JZCA9PSB2aWRlb0lkO1xuICAgIH07XG5cbiAgICB2YXIgdXBkYXRlVXBsb2FkUHJvZ3Jlc3NMYWJlbCA9ICgpID0+IHtcbiAgICAgICAgdmFyIGNvbnRhaW5lcnM6IEpRdWVyeSA9ICQoXCIjbWVkaWEtbGlicmFyeS1tYWluLWVkaXRvci1mb2N1cyAucHJvcGVydGllc1wiKTtcblxuICAgICAgICBjb250YWluZXJzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGNvbnRhaW5lciA9ICQodGhpcyk7XG4gICAgICAgICAgICB2YXIgc3RhdHVzV3JhcHBlciA9IGNvbnRhaW5lci5maW5kKFwiLnVwbG9hZC1zdGF0dXMtd3JhcHBlclwiKTtcbiAgICAgICAgICAgIHZhciBwdWJsaWNhdGlvblN0YXR1c0xhYmVsID0gY29udGFpbmVyLmZpbmQoXCIucHVibGljYXRpb24tc3RhdHVzIHNwYW5cIik7XG4gICAgICAgICAgICB2YXIgdXBsb2FkU3RhdHVzTGFiZWwgPSBjb250YWluZXIuZmluZChcIi51cGxvYWQtc3RhdHVzLXRleHRcIik7XG4gICAgICAgICAgICB2YXIgcHJvZ3Jlc3NMYWJlbCA9IGNvbnRhaW5lci5maW5kKFwiLnVwbG9hZC1wcm9ncmVzcy12YWx1ZVwiKTtcbiAgICAgICAgICAgIHZhciB1cGxvYWRQcm9ncmVzc0NvbnRhaW5lciA9ICQoXCIudXBsb2FkLXByb2dyZXNzLXN0YXR1c1wiKTtcbiAgICAgICAgICAgIHZhciBzdGF0dXNVcmw6IHN0cmluZyA9IHN0YXR1c1dyYXBwZXIuZGF0YShcInN0YXR1cy11cmxcIik7XG4gICAgICAgICAgICB2YXIgc3RhdHVzOiBzdHJpbmcgPSBzdGF0dXNXcmFwcGVyLmRhdGEoXCJ1cGxvYWQtc3RhdHVzXCIpO1xuICAgICAgICAgICAgdmFyIHB1Ymxpc2hlZDogc3RyaW5nID0gc3RhdHVzV3JhcHBlci5kYXRhKFwicHVibGlzaGVkXCIpO1xuICAgICAgICAgICAgdmFyIHZpZGVvSWQ6IG51bWJlciA9IHN0YXR1c1dyYXBwZXIuZGF0YShcInZpZGVvLWlkXCIpO1xuXG4gICAgICAgICAgICBpZiAoc3RhdHVzID09IFwiVXBsb2FkZWRcIiAmJiBwdWJsaXNoZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciB1cGRhdGUgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFoYXNGb2N1cyh2aWRlb0lkKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgICAgIHVybDogc3RhdHVzVXJsLFxuICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2VcbiAgICAgICAgICAgICAgICB9KS5kb25lKChkYXRhIDogYW55KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2dyZXNzTGFiZWwudGV4dChkYXRhLnVwbG9hZFN0YXRlLnBlcmNlbnRDb21wbGV0ZSArIFwiJVwiKTtcbiAgICAgICAgICAgICAgICAgICAgdXBsb2FkU3RhdHVzTGFiZWwudGV4dChkYXRhLnVwbG9hZFN0YXRlLnN0YXR1cyk7XG4gICAgICAgICAgICAgICAgICAgIHB1YmxpY2F0aW9uU3RhdHVzTGFiZWwudGV4dChkYXRhLnB1Ymxpc2hlZCA/IHN0YXR1c1dyYXBwZXIuZGF0YShcInB1Ymxpc2hlZC10ZXh0XCIpIDogc3RhdHVzV3JhcHBlci5kYXRhKFwiZHJhZnQtdGV4dFwiKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEucHVibGlzaGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVkaWF0aHVtYm5haWwgPSAkKFwiLm1lZGlhLXRodW1ibmFpbC1jbG91ZC12aWRlb1tkYXRhLWlkPVwiICsgdmlkZW9JZCArIFwiXVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lZGlhdGh1bWJuYWlsLnBhcmVudHMoXCJsaTpmaXJzdFwiKS5maW5kKFwiLnB1YmxpY2F0aW9uLXN0YXR1c1wiKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS51cGxvYWRTdGF0ZS5zdGF0dXMgPT0gXCJVcGxvYWRlZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGxvYWRQcm9ncmVzc0NvbnRhaW5lci5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YS51cGxvYWRTdGF0ZS5zdGF0dXMgPT0gXCJVcGxvYWRpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBsb2FkUHJvZ3Jlc3NDb250YWluZXIuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQodXBkYXRlLCA1MDAwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB1cGRhdGUoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHVwZGF0ZVVwbG9hZFByb2dyZXNzTGFiZWwoKTtcbn0pKGpRdWVyeSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
