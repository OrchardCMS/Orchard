@model TaxonomyAdminIndexViewModel
@using Orchard.Taxonomies.ViewModels;

@{
    Layout.Title = T("Manage Taxonomies").ToString();
    int taxonomyIndex = 0, ti;
}
<div class="panel panel-default">
    @using (Html.BeginFormAntiForgeryPost()) {
        @Html.ValidationSummary()
        <div class="panel-heading no-border">
            <div class="panel-heading-primary-group">
                <fieldset>
                    <input id="publishActions" name="@Html.NameOf(m => m.BulkAction)" type="hidden" value="@TaxonomiesAdminIndexBulkAction.None" />
                    <button name="submit.BulkEdit" type="submit" class="hidden" value="@T("Apply")">@T("Apply")</button>
                    <div class="btn-group">
                        <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                            Bulk Actions <span class="caret"></span>
                        </button>&nbsp;
                        <ul class="dropdown-menu" role="menu">
                            <li><a id="btn-bulk-delete" href="#" data-confirm="@T("Are you sure you want to delete these items?")" data-action="@TaxonomiesAdminIndexBulkAction.Delete">@T("Delete").ToString()</a></li>
                        </ul>
                    </div>
                </fieldset>
            </div>
            <div class="panel-heading-actions">
                @Html.ActionLink(T("Add a taxonomy").Text, "Create", new { Area = "Contents", Id = "Taxonomy", ReturnUrl = Request.RawUrl }, new { @class = "btn btn-primary" })
            </div>
        </div>
        if (Model.Taxonomies.Any()) {
            <div class="row">
                <div class="col-sm-12">
                    <div class="table-responsive table-with-footer">
                        <table class="table table-fw-widget data-table table-striped dataTable no-footer" summary="@T("This is a table of the taxonomies in your application")">
                            <thead>
                                <tr>
                                    <th scope="col" class="text-nowrap">
                                        <div class="am-checkbox inline">
                                            <input id="checkAll" class="check-all" type="checkbox">
                                            <label for="checkAll">Select all</label>
                                        </div>
                                    </th>
                                    <th scope="col" width="500">@T("Name")</th>
                                    <th scope="col" width="500">&nbsp;</th>
                                </tr>
                            </thead>
                            @foreach (var taxonomyEntry in Model.Taxonomies) {
                                ti = taxonomyIndex;
                                <tr class="@(taxonomyEntry.IsInternal ? "internal" : null)">
                                    <td>
                                        <input type="hidden" value="@Model.Taxonomies[taxonomyIndex].Id" name="@Html.NameOf(m => m.Taxonomies[ti].Id)" />
                                        <input type="hidden" value="@Model.Taxonomies[taxonomyIndex].Name" name="@Html.NameOf(m => m.Taxonomies[taxonomyIndex].Name)" />
                                        @if (!taxonomyEntry.IsInternal || Authorizer.Authorize(Orchard.Security.StandardPermissions.SiteOwner)) {
                                            <div class="am-checkbox">
                                                <input type="checkbox" value="true" name="@Html.NameOf(m => m.Taxonomies[ti].IsChecked)" id="@Html.NameOf(m => m.Taxonomies[ti].IsChecked)" />
                                                <label for="@Html.NameOf(m => m.Taxonomies[ti].IsChecked)"></label>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        @if (!taxonomyEntry.IsInternal || Authorizer.Authorize(Orchard.Security.StandardPermissions.SiteOwner)) {
                                            @Html.ActionLink(taxonomyEntry.Name, "Index", "TermAdmin", new { taxonomyId = taxonomyEntry.Id }, new object { })
                                        } else {
                                            @Html.ItemDisplayText(taxonomyEntry.ContentItem)
                                        }
                                    </td>
                                    <td class="text-nowrap">
                                        @if (!taxonomyEntry.IsInternal || Authorizer.Authorize(Orchard.Security.StandardPermissions.SiteOwner)) {
                                            @Html.ActionLink(T("Terms").Text, "Index", "TermAdmin", new { taxonomyId = taxonomyEntry.Id }, new { @class = "btn btn-default" })<text>&nbsp;</text>
                                            @Html.ActionLink(T("Import").Text, "Import", new { id = taxonomyEntry.Id }, new { @class = "btn btn-default" })<text>&nbsp;</text>
                                            @Html.ItemEditLink(T("Edit").Text, taxonomyEntry.ContentItem, null, new { @class = "btn btn-primary" })<text>&nbsp;</text>
                                            @Html.ActionLink(T("Delete").Text, "Delete", new { id = taxonomyEntry.Id }, new { @class = "btn btn-danger", @data_confirm = @T("Are you sure you want to delete this item?") })
                                        }
                                    </td>
                                </tr>
                                taxonomyIndex++;
                            }
                        </table>
                    </div>
                </div>
            </div>
        } else {
            <div class="panel-body">
                <p>
                    @T("There are currently no taxonomies.")
                    @Html.ActionLink(T("Add one now").Text, "Create", new { Area = "Contents", Id = "Taxonomy", ReturnUrl = Request.RawUrl }, new { @class = "" })
                </p>
            </div>
        }
        <div class="row am-datatable-footer">
            <div class="col-sm-12">
                @Display(Model.Pager)
            </div>
        </div>
    }
</div>
@Display.Modal()