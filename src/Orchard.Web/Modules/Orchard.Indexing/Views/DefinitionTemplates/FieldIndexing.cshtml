@model Orchard.Indexing.Settings.FieldIndexing

@{
    Script.Include("FieldIndexing.js").AtFoot();
}

<fieldset>
    <legend>@T("Indexing")</legend>
    <div>
        @Html.CheckBoxFor(m => m.Included, new { @class = "indexing-controlling-checkbox" })
        <label for="@Html.FieldIdFor(m => m.Included)" class="forcheckbox">@T("Include in the index")</label>
        @Html.ValidationMessageFor(m => m.Included)
        <span class="hint">@T("Check to add content of this field in the selected indexes.")</span>
    </div>
    <div data-indexing-controlled-by="@Html.NameFor(m => m.Included)">
        @Html.CheckBoxFor(m => m.Stored)
        <label for="@Html.FieldIdFor(m => m.Stored)" class="forcheckbox">@T("Store the value in the index so that it can be retrived")</label>
        @Html.ValidationMessageFor(m => m.Stored)
    </div>
    <div data-indexing-controlled-by="@Html.NameFor(m => m.Included)">
        @Html.CheckBoxFor(m => m.Analyzed)
        <label for="@Html.FieldIdFor(m => m.Analyzed)" class="forcheckbox">@T("Analyze and tokenize the value")</label>
        @Html.ValidationMessageFor(m => m.Analyzed)
    </div>
    <div data-indexing-controlled-by="@Html.NameFor(m => m.Included)">
        @Html.CheckBoxFor(m => m.TagsRemoved)
        <label for="@Html.FieldIdFor(m => m.TagsRemoved)" class="forcheckbox">@T("Remove HTML tags from the value that is indexed")</label>
        @Html.ValidationMessageFor(m => m.TagsRemoved)
    </div>
</fieldset>