@using Orchard.Templates.Models
@model Orchard.Templates.ViewModels.ShapePartViewModel
@{
    Style.Include("~/modules/orchard.templates/scripts/codemirror/lib/codemirror.css");
    Style.Include("template-editor.css");
    Script.Require("jQuery");
    Script.Include("codemirror/lib/codemirror.js");
    Script.Include("codemirror/mode/xml/xml.js");
    Script.Include("codemirror/mode/javascript/javascript.js");
    Script.Include("codemirror/mode/css/css.js");
    Script.Include("codemirror/mode/htmlmixed/htmlmixed.js");
    Script.Include("codemirror/mode/htmlembedded/htmlembedded.js");
    Script.Include("template-editor.js");
}
<fieldset>
    <div>
        @Html.TextAreaFor(m => m.Template, new { @class = "text large code-editor" })
    </div>
    <div>
        @Html.LabelFor(m => m.RenderingMode, T("Rendering Mode"))
        @Html.DropDownListFor(m => m.RenderingMode, Enum.GetValues(typeof(RenderingMode)).Cast<RenderingMode>().Select(renderingMode => new SelectListItem { Text = renderingMode.ToString(), Value = renderingMode.ToString() }))
    </div>
</fieldset>