@model Orchard.Packaging.ViewModels.PackagingExtensionsViewModel
@using Orchard.Packaging.ViewModels;
@using System.Linq;

@{
    Style.Require("PackagingAdmin");

    Layout.Title = T("Modules").ToString();
}

@using (Html.BeginFormAntiForgeryPost(Url.Action("Modules", "Gallery"))) {
    <div class="panel panel-default panel-heading-fullwidth">
        <div class="panel-heading no-border form-inline">
            <div class="panel-heading-actions">
                <fieldset class="bulk-actions">
                    <div class="input-group">
                        <input id="searchText" type="text" class="form-control" name="@Html.NameOf(m => m.Options.SearchText)" value="@Model.Options.SearchText">
                        <span class="input-group-btn">
                            <button type="submit" class="btn btn-primary">@T("Search").ToString()</button>
                        </span>
                    </div>
                </fieldset>
            </div>
            <div class="panel-heading-primary-group">
                <fieldset class="bulk-actions bulk-actions-auto">
                    <label for="sourceId">@T("Feed:")</label>
                    <select id="sourceId" name="@Html.NameOf(m => m.Options.SourceId)" class="form-control auto-size">
                        @Html.SelectOption(Model.Options.SourceId, null, T("All feeds").ToString())
                        @foreach (var source in Model.Sources) {
                            @Html.SelectOption(Model.Options.SourceId, source.Id, source.FeedTitle)
                        }
                    </select>
                </fieldset>

                <fieldset class="bulk-actions bulk-actions-auto">
                    <label for="filterResults">@T("Sort by:")</label>
                    <select id="filterResults" name="@Html.NameOf(m => m.Options.Order)" class="form-control auto-size">
                        @Html.SelectOption(Model.Options.Order, PackagingExtensionsOrder.Downloads, T("Downloads").ToString())
                        @Html.SelectOption(Model.Options.Order, PackagingExtensionsOrder.Ratings, T("Ratings").ToString())
                        @Html.SelectOption(Model.Options.Order, PackagingExtensionsOrder.Alphanumeric, T("Alphanumeric").ToString())
                    </select>

                    <button id="apply-bulk-actions" class="apply-bulk-actions-auto" type="submit">@T("Apply")</button>
                </fieldset>

            </div>
        </div>
        <div class="panel-body">
            @if (Model.Extensions.Any()) {
                <div class="content-items">
                    <ul class="no-selection with-thumbnail">
                        @foreach (var item in Model.Extensions) {
                            <li>
                                @{
                                    string iconUrl = item.IconUrl;
                                    if (string.IsNullOrWhiteSpace(iconUrl)) {
                                        iconUrl = Href("../../Content/Images/ModuleDefaultIcon.png");
                                    }
                                }

                                <div class="notifications">
                                    @if (item.Notifications != null && item.Notifications.Count > 0) {
                                        <div class="notifications">
                                            @foreach (string notification in item.Notifications) {
                                                <h5>@Html.Raw(notification)</h5>
                                            }
                                        </div>
                                    }
                                </div>
                                <div class="summary">
                                    <div class="properties">
                                        <div class="head @if (item.Installed) {<text>installed</text>}">
                                            <div class="thumbnail-wrapper">
                                                <img src="@iconUrl" class="thumbnail" alt="module" />
                                            </div>
                                            <div class="description">
                                                <h2>@item.Title<span> - @T("Version: {0}", item.Version)</span></h2>

                                                @{
                                                    var description = item.Description ?? T("(No description").Text;
                                                }
                                                <p>@Html.Raw(Html.Encode(description).Replace("\n", "<br />"))</p>

                                                @if (!string.IsNullOrWhiteSpace(item.GalleryDetailsUrl)) {
                                                    <p>
                                                        <a href="@item.GalleryDetailsUrl">@T("more...")</a>
                                                    </p>
                                                }
                                            </div>
                                        </div>


                                        <div class="related">
                                            @Html.ActionLink(T("Install").ToString(),
                                       "InstallGallery", "PackagingServices",
                                       new RouteValueDictionary { { "packageId", item.PackageId },
                                           { "version", item.Version }, { "sourceId", item.Source.Id },
                                           { "redirectUrl", HttpContext.Current.Request.RawUrl } }, new {
                                               @class = "btn btn-danger"
                                           })
                                            <a href="@item.PackageStreamUri" class="btn btn-primary">@T("Download")</a>
                                        </div>
                                    </div>

                                    <div class="metadata">
                                        <ul class="pageStatus group">
                                            <li>@T("Last Updated: {0}", item.LastUpdated)</li>
                                            <li>@T("Author: {0}", !string.IsNullOrEmpty(item.Authors) ? item.Authors : T("Unknown").ToString())</li>
                                            <li>@T("Downloads: {0}", item.DownloadCount)</li>
                                            <li>
                                                @T("Website: ")
                                                @if (!string.IsNullOrEmpty(item.ProjectUrl)) { <a href="@item.ProjectUrl">@item.ProjectUrl</a> }
                                                else { @T("Unknown").ToString() }
                                            </li>
                                            <li class="rating">
                                                @T("Rating: ")
                                                <div class="ratings" style="width:@(15 * 5)px" title="@T("Rating: {0} out of 5 ({1} total).", item.Rating, item.RatingsCount)">
                                                    <div class="score" style="width:@(15 * (item.Rating))px">&nbsp;</div>
                                                </div>
                                            </li>
                                        </ul>

                                    </div>
                                </div>
                            </li>}
                    </ul>
                </div>
                }
        </div>
        <div class="panel-footer">
            @Display(Model.Pager)
        </div>
    </div>
}