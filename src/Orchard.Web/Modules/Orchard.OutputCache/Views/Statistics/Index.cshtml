@using Orchard.Localization.Services
@using Orchard.OutputCache.ViewModels
@model StatisticsViewModel
           
@{
    Layout.Title = T("Cache Statistics");
    var dateTimeFormatProvider = WorkContext.Resolve<IDateTimeFormatProvider>();
}

@using (Html.BeginFormAntiForgeryPost()) {
    @Html.ValidationSummary()
    <div class="manage">@Html.ActionLink(T("Evict All").ToString(), "EvictAll", new { Area = "Orchard.OutputCache", Controller = "Statistics" }, new { @class = "button primaryAction", itemprop = "UnsafeUrl" })</div>
}

<h2>@T("Cached Items")</h2>
<table class="items">
    <thead>
        <tr>
            <th scope="col">@T("URL")</th>
            <th scope="col">@T("Cache Key")</th>
            <th scope="col">@T("Cached")</th>
            <th scope="col">@T("Valid Until")</th>
            <th scope="col">@T("Stored Until")</th>
            <th scope="col">&nbsp;</th>
        </tr>
    </thead>
    @foreach (var cacheItem in Model.CacheItems) {
        <tr>
            <td><span title="@cacheItem.QueryString">@cacheItem.Url</span></td>
            <td>@cacheItem.CacheKey</td>
            <td>@Display.DateTimeRelative(DateTimeUtc: cacheItem.CachedOnUtc)</td>
            <td>@Display.DateTime(DateTimeUtc: cacheItem.ValidUntilUtc, CustomFormat: T("{0} {1}", dateTimeFormatProvider.ShortDateFormat, dateTimeFormatProvider.LongTimeFormat))</td>
            <td>@Display.DateTime(DateTimeUtc: cacheItem.StoredUntilUtc, CustomFormat: T("{0} {1}", dateTimeFormatProvider.ShortDateFormat, dateTimeFormatProvider.LongTimeFormat))</td>
            <td>@Html.ActionLink(T("Evict").Text, "Evict", new { Area = "Orchard.OutputCache", Controller = "Statistics", cacheKey = cacheItem.CacheKey })</td>
        </tr>
    }
</table>

@Display(Model.Pager)


