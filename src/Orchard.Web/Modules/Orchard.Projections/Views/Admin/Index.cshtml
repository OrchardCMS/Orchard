@model AdminIndexViewModel
@using Orchard.Projections.Models;
@using Orchard.Projections.ViewModels;

@{
    Style.Include("admin-projections.css");
    Layout.Title = T("Manage Queries").ToString();
    var index = 0;

    var pageSizes = new List<int?>() { 10, 50, 100 };
    var defaultPageSize = WorkContext.CurrentSite.PageSize;
    if (!pageSizes.Contains(defaultPageSize)) {
        pageSizes.Add(defaultPageSize);
    }
}
<div class="panel panel-default">
    @using (Html.BeginFormAntiForgeryPost()) {
        @Html.ValidationSummary()
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-4">
                    <fieldset>
                        <input id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)" type="hidden" value="@QueriesBulkAction.None" />
                        <button name="submit.BulkEdit" type="submit" class="hidden" value="@T("Apply")">@T("Apply")</button>
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                                Bulk Actions <span class="caret"></span>
                            </button>&nbsp;
                            <ul class="dropdown-menu" role="menu">
                                <li><a id="btn-bulk-delete" href="#" data-confirm="@T("Are you sure you want to delete these items?")" data-action="@QueriesBulkAction.Delete">@T("Delete").ToString()</a></li>
                            </ul>
                        </div>
                    </fieldset>
                </div>
                <div class="col-md-4 text-center">
                    @* No need to filter if there is only one option in the dropdownlist *@
                    @*<fieldset class="bulk-actions">
                            <label for="filterResults">@T("Sort by:")</label>
                            <select id="filterResults" name="@Html.NameOf(m => m.Options.Order)" class="form-control auto-size">
                                @Html.SelectOption(Model.Options.Order, QueriesOrder.Name, T("Name").ToString())
                            </select>
                            <button class="btn btn-default" type="submit" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>
                        </fieldset>*@
                </div>
                <div class="col-md-4 text-right">
                    @Html.ActionLink(T("Add a new Query").ToString(), "Create", new { Area = "Contents", id = "Query", returnurl = HttpContext.Current.Request.RawUrl }, new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="table-responsive table-with-footer">
                    <table class="table table-fw-widget data-table table-striped dataTable no-footer">
                        <thead>
                            <tr>
                                <th scope="col">
                                    <div class="am-checkbox inline">
                                        <input id="checkAll" class="check-all" type="checkbox">
                                        <label for="checkAll">@T("Select all")</label>
                                    </div>
                                </th>
                                <th scope="col">@T("Name")</th>
                                <th scope="col" class="text-right">@T("Actions")</th>
                            </tr>
                        </thead>
                        @foreach (var entry in Model.Queries) {
                            var checkboxId = Html.IdFor(m => m.Queries[index].QueryId);
                            <tr>
                                <td>
                                    <div class="am-checkbox">
                                        <input type="hidden" value="@Model.Queries[index].QueryId" name="@Html.FieldNameFor(m => m.Queries[index].QueryId)" />
                                        <input type="hidden" value="@Model.Queries[index].Name" name="@Html.FieldNameFor(m => m.Queries[index].Name)" />
                                        <input id="@checkboxId" type="checkbox" value="true" name="@Html.FieldNameFor(m => m.Queries[index].IsChecked)" />
                                        <label for="@checkboxId"></label>
                                    </div>
                                </td>
                                <td>
                                    @Html.ActionLink(entry.Name, "Edit", new { id = entry.QueryId })
                                </td>
                                <td>
                                    @Html.ActionLink(T("Properties").ToString(), "Edit", new { Area = "Contents", id = entry.QueryId, returnurl = HttpContext.Current.Request.RawUrl }, new { @class = "btn btn-default" })
                                    @Html.ActionLink(T("Edit").ToString(), "Edit", new { id = entry.QueryId }, new { @class = "btn btn-primary" })
                                    @Html.ActionLink(T("Delete").Text, "Delete", new { id = entry.QueryId }, new { @class = "btn btn-danger", @data_confirm = @T("Are you sure you want to delete this item?") })
                                    @if (entry.Query.FilterGroups.SelectMany(x => x.Filters).Any()) {
                                        <text>| </text> @Html.ActionLink(T("Preview").ToString(), "Preview", new { id = entry.QueryId })
                                    }
                                </td>
                            </tr>
                            index++;
                        }
                    </table>
                </div>
                <div class="row am-datatable-footer">
                    <div class="col-sm-12">
                        @Display(Model.Pager)
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@Display.Modal()