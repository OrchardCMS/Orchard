@model AdminIndexViewModel
@using Orchard.Projections.Models;
@using Orchard.Projections.ViewModels;

@{
    Style.Include("admin-projections.css");
    Layout.Title = T("Manage Queries").ToString();
    var index = 0;

    var pageSizes = new List<int?>() { 10, 50, 100 };
    var defaultPageSize = WorkContext.CurrentSite.PageSize;
    if (!pageSizes.Contains(defaultPageSize)) {
        pageSizes.Add(defaultPageSize);
    }
}
<div class="panel panel-default">
    @using (Html.BeginFormAntiForgeryPost()) {
        @Html.ValidationSummary()
        <div class="panel-heading">
            <div class="panel-heading-actions">
                @Html.ActionLink(T("Add a new Query").ToString(), "Create", new { Area = "Contents", id = "Query", returnurl = HttpContext.Current.Request.RawUrl }, new { @class = "button primaryAction" })
            </div>
            <div class="panel-heading-primary-group">
                <fieldset class="bulk-actions">
                    <div class="am-checkbox inline">
                        <input id="checkAll" class="check-all" type="checkbox">
                        <label for="checkAll">@T("Select all")</label>
                    </div>
                    <select id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)" class="form-control auto-size">
                        @Html.SelectOption(Model.Options.BulkAction, QueriesBulkAction.None, T("Choose action...").ToString())
                        @Html.SelectOption(Model.Options.BulkAction, QueriesBulkAction.Delete, T("Delete").ToString())
                    </select>
                    <button type="submit" name="submit.BulkEdit" value="@T("Apply")">@T("Apply")</button>
                </fieldset>
                <fieldset class="bulk-actions">
                    <label for="filterResults">@T("Sort by:")</label>
                    <select id="filterResults" name="@Html.NameOf(m => m.Options.Order)" class="form-control auto-size">
                        @Html.SelectOption(Model.Options.Order, QueriesOrder.Name, T("Name").ToString())
                    </select>
                    <input type="hidden" name="Page" value="1" />
                    <label for="pageSize">@T("Show:")</label>
                    <select id="pageSize" name="PageSize" class="form-control auto-size">
                        @Html.SelectOption((int)Model.Pager.PageSize, 0, T("All").ToString())
                        @foreach (int size in pageSizes.OrderBy(p => p)) {
                            @Html.SelectOption((int)Model.Pager.PageSize, size, size.ToString())
                        }
                    </select>
                    <button type="submit" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>
                </fieldset>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-sm-12">
            <div class="table-responsive table-with-footer">
                <table class="table table-fw-widget data-table table-striped dataTable no-footer">
                    <thead>
                        <tr>
                            <th scope="col">&nbsp;&darr;</th>
                            <th scope="col">@T("Name")</th>
                            <th scope="col">&nbsp;</th>
                        </tr>
                    </thead>
                    @foreach (var entry in Model.Queries) {
                        var checkboxId = Html.IdFor(m => m.Queries[index].QueryId);
                        <tr>
                            <td>
                                <div class="am-checkbox">
                                    <input type="hidden" value="@Model.Queries[index].QueryId" name="@Html.NameOf(m => m.Queries[index].QueryId)" />
                                    <input type="checkbox" value="true" name="@Html.NameOf(m => m.Queries[index].IsChecked)" id="@checkboxId" />
                                    <label for="@checkboxId"></label>
                                </div>
                            </td>
                            <td>
                                @Html.ActionLink(entry.Name, "Edit", new { id = entry.QueryId })
                            </td>
                            <td>
                                @Html.ActionLink(T("Properties").ToString(), "Edit", new { Area = "Contents", id = entry.QueryId, returnurl = HttpContext.Current.Request.RawUrl }) |
                                @Html.ActionLink(T("Edit").ToString(), "Edit", new { id = entry.QueryId }) |
                                @Html.ActionLink(T("Delete").ToString(), "Delete", new { id = entry.QueryId }, new { itemprop = "RemoveUrl UnsafeUrl" })
                                @if (entry.Query.FilterGroups.SelectMany(x => x.Filters).Any()) {
                                    <text>| </text> @Html.ActionLink(T("Preview").ToString(), "Preview", new { id = entry.QueryId })
                                }
                            </td>
                        </tr>
                        index++;
                    }
                </table>
            </div>
            <div class="row am-datatable-footer">
                <div class="col-sm-5"></div>
                <div class="col-sm-7">
                    @using (Html.BeginFormAntiForgeryPost()) {
                        @Display(Model.Pager)
                    }
                </div>
            </div>

        </div>


    </div>
</div>