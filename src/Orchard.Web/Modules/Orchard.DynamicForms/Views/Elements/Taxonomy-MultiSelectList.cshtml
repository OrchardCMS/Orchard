@using Orchard.DynamicForms.Elements
@using Orchard.Layouts.Helpers
@{
    var element = (Taxonomy)Model.Element;
    string parentTaxonomyElementName = Model.ParentTaxonomyElementName;
    string parentTaxonomyElementInputType = Model.ParentTaxonomyElementInputType;
    var attributes = (IDictionary<string, object>)TagBuilderExtensions.GetCommonElementAttributes(Model);
    if (!string.IsNullOrWhiteSpace(parentTaxonomyElementName)) {
        Script.Require("DynamicForms.TaxonomyElement").AtFoot();
        if (attributes.ContainsKey("class")) {
            attributes["class"] += " taxonomy-element";
        }
        else {
            attributes.Add("class", "taxonomy-element");
        }
        attributes["data-taxonomy-element-ajax-url"] = Url.Action("GetChildrenTerms", "TaxonomyElement", new { contentId = Model.ContentItem.Id, formName = element.Form.Name, elementName = element.Name, area = "Orchard.DynamicForms" });
        attributes["data-taxonomy-element-input-type"] = "MultiSelectList";
        attributes["data-taxonomy-element-parent-name"] = parentTaxonomyElementName;
        attributes["data-taxonomy-element-parent-input-type"] = parentTaxonomyElementInputType;
    }
    var name = String.IsNullOrWhiteSpace((string)Model.ProcessedName) ? "MultiSelectList1" : (string)Model.ProcessedName;
    var options = (IEnumerable<SelectListItem>)Model.TermOptions;
    var clientValidationAttributes = (IDictionary<string, string>)Model.ClientValidationAttributes;
    var htmlId = !String.IsNullOrWhiteSpace(element.HtmlId) ? element.HtmlId : name;

    foreach (var attribute in clientValidationAttributes) {
        if (attributes.ContainsKey(attribute.Key)) {
            attributes[attribute.Key] = " " + attribute.Value.ToString();
        }
        else {
            attributes.Add(attribute.Key, attribute.Value.ToString());
        }
    }
}
@if (element.ShowLabel) {
    <label for="@htmlId">@Html.Raw(Model.ProcessedLabel)</label>
}
@Html.ListBox(name, options, attributes)
@if (element.ValidationSettings.ShowValidationMessage == true) {
    @Html.ValidationMessage(name)
}