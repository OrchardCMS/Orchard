@using Orchard.Search.ViewModels
@model SearchSettingsViewModel
@{
    Style.Include("orchard-search-admin.css");
}
<fieldset>
    <legend>@T("Search")</legend>
    <div class="form-group">
        <label>@T("Default Index")</label>
        @if (Model.Entries != null && Model.Entries.Any()) {
            if (String.IsNullOrWhiteSpace(Model.SelectedIndex)) {
                Model.Entries.Insert(0, new IndexSettingsEntry { Index = "" });
            }
            <select id="selectIndex" name="@Html.NameFor(m => m.SelectedIndex)">
                @foreach (var modelEntry in Model.Entries) {
                    @Html.SelectOption(Model.SelectedIndex, modelEntry.Index, modelEntry.Index)
                }
            </select>
            @Html.Hint(T("Select which index to use by default in search queries."))

            <label>@T("Fields")</label>
            <ul class="search-indexes group">
                @{
                    var indexes = Model.Entries.Select(x => x.Index);
                    var entryIndex = 0;
                    foreach (var index in indexes) {
                        var fieldEntries = Model.Entries.Single(x => x.Index == index).Fields;
                        var entryIndexClosure = entryIndex;
                        @Html.HiddenFor(m => m.Entries[entryIndex].Index)
                        <li>
                            <h3>@index</h3>
                            <ul>
                                @{ var fieldIndex = 0; }
                                @foreach (var fieldEntry in fieldEntries) {
                                    var fieldIndexClosure = fieldIndex;
                                    <li>
                                        @Html.EditorFor(m => m.Entries[entryIndex].Fields[fieldIndex].Selected)
                                        @Html.HiddenFor(m => m.Entries[entryIndex].Fields[fieldIndex].Field)
                                        <label class="forcheckbox" for="@Html.FieldIdFor(m => m.Entries[entryIndexClosure].Fields[fieldIndexClosure].Selected)">@Model.Entries[entryIndex].Fields[fieldIndex].Field</label>
                                    </li>
                                    fieldIndex++;
                                }
                            </ul>
                        </li>
                        entryIndex++;
                    }
                }
            </ul>
            <span class="hint">@T("Check any field for each index which should be used for search queries.")</span>

        }
        else {
            <span class="hint">@T("There is currently no index to search from. Please update your index, and check if some indexable content exists.")</span>
        }
    </div>
    <div>
        <label>@T("Localization")</label>
        @Html.EditorFor(m => m.FilterCulture)
        <label class="forcheckbox" for="@Html.FieldIdFor(m => m.FilterCulture)">@T("Narrow search to current culture only")</label>
        <span class="hint">@T("If checked, search results will only include content items localized in the current culture of the request.")</span>
    </div>

</fieldset>