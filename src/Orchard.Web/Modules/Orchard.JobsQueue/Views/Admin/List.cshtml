@using Orchard.Localization
@using Orchard.JobsQueue.Models
@using Orchard.Utility.Extensions
@{
    IEnumerable<QueuedJobRecord> jobs = Model.Jobs;
    JobsQueueStatus status = Model.JobsQueueStatus;

    Layout.Title = T("Jobs Queue");
    Style.Include("admin-jobsqueue.css");
}
<div class="panel panel-default">
    @using (Html.BeginFormAntiForgeryPost()) {
        <div class="panel-heading">
            <span class="queue-status @String.Format("{0}", status.ToString().HtmlClassify())">@T("Status: {0}", status)</span>
            @if (status == JobsQueueStatus.Paused) {
                <button type="submit" name="submit.Resume" value="resume" class="button">@T("Resume")</button>
            } else {
                <button type="submit" name="submit.Pause" value="pause" class="button grey">@T("Pause")</button>
                <button type="submit" name="submit.Process" value="process">@T("Process Now")</button>
            }
        </div>
        <div class="row">
            <div class="col-sm-12">
                @if (!jobs.Any()) {
                    <div class="panel-body">
                        <p class="job info">@T("The queue is empty.")</p>
                    </div>
                } else {
                    <div class="table-responsive table-with-footer">
                        <table class="table table-fw-widget data-table table-striped dataTable no-footer">
                            <thead>
                                <tr>
                                    <th>@T("Priority")</th>
                                    <th>@T("Type")</th>
                                    <th>@T("Created")</th>
                                    <th>@T("Actions")</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var job in jobs) {
                                    LocalizedString priorityName;
                                    switch (job.Priority) {
                                        case -50:
                                            priorityName = T("Low");
                                            break;
                                        case 0:
                                            priorityName = T("Normal");
                                            break;
                                        case 50:
                                            priorityName = T("High");
                                            break;
                                        default:
                                            priorityName = T("None");
                                            break;
                                    }
                                    <tr>
                                        <td>@priorityName</td>
                                        <td>@job.Message</td>
                                        <td>@Display.DateTimeRelative(DateTimeUtc: job.CreatedUtc)</td>
                                        <td>
                                            <a href="@Url.Action("Details", "Admin", new { job.Id, returnUrl = Request.Url.PathAndQuery })">@T("Details")</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="row or-datatable-footer">
                        <div class="col-sm-12">
                            @Display(Model.Pager)
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>
